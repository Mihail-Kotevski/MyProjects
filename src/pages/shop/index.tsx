import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { IProduct } from "../../interfaces/types";
import Link from "next/link";
import { useRouter } from "next/router";
import React, { useRef, useState } from "react";

interface Props {
  data: IProduct[];
}

const Shop: NextPage<Props> = ({ data }) => {
  const { query, push, asPath } = useRouter();
  const [search, setSearch] = useState("");

  const submitFunct = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (search) {
      push(`/shop?q=${search}`);
      setSearch("");
    } else {
      push(`/shop`);
    }
  };

  return (
    <>
      <Head>
        <title>Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg0 m-t-23 p-b-140">
        <div className="container">
          <div className="flex-w flex-sb-m p-b-52">
            <div className="flex-w flex-l-m filter-tope-group m-tb-10">
              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  asPath === "/shop" ? "how-active1" : ""
                }`}
                data-filter="*"
                onClick={() => {
                  push({
                    pathname: "/shop",
                  });
                }}
              >
                All Products
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  query.gender === "women" ? "how-active1" : ""
                }`}
                data-filter=".women"
                onClick={() => {
                  push("/shop?gender=women");
                }}
              >
                Women
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  query.gender === "man" ? "how-active1" : ""
                }`}
                data-filter=".men"
                onClick={() => {
                  push("/shop?gender=man");
                }}
              >
                Men
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  query.q === "belt" ? "how-active1" : ""
                }`}
                data-filter=".bag"
                onClick={() => {
                  push("/shop?q=belt");
                }}
              >
                Belt
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  query.q === "shoes" ? "how-active1" : ""
                }`}
                data-filter=".shoes"
                onClick={() => {
                  push("/shop?q=shoes");
                }}
              >
                Shoes
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  query.q === "watch" ? "how-active1" : ""
                }`}
                data-filter=".watches"
                onClick={() => {
                  push("/shop?q=watches");
                }}
              >
                Watches
              </button>
            </div>

            {/* search */}
            <div className="panel-search w-full p-t-10 p-b-15">
              <form action="" onSubmit={submitFunct}>
                <div className="bor8 dis-flex p-l-15">
                  <button className="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
                    <i className="zmdi zmdi-search"></i>
                  </button>

                  <input
                    className="mtext-107 cl2 size-114 plh2 p-r-15"
                    type="text"
                    name="search-product"
                    placeholder="Search"
                    onChange={(e) => setSearch(e.target.value)}
                  />
                </div>
              </form>
            </div>
          </div>

          <div className="row isotope-grid">
            {data &&
              data.map((el) => {
                return (
                  <div
                    key={el.id}
                    className="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item women"
                  >
                    <div className="block2">
                      <div className="block2-pic hov-img0">
                        <img src={el.img} alt="IMG-PRODUCT" />
                        <Link href={`/shop/${el.id}`}>
                          <a
                            href="#"
                            className="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1"
                          >
                            View Details
                          </a>
                        </Link>
                      </div>

                      <div className="block2-txt flex-w flex-t p-t-14">
                        <div className="block2-txt-child1 flex-col-l ">
                          <a
                            href="product-detail.html"
                            className="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6"
                          >
                            {el.title}
                          </a>

                          <span className="stext-105 cl3">{el.price}</span>
                        </div>
                      </div>
                    </div>
                  </div>
                );
              })}
          </div>

          <div className="flex-l-m flex-w w-full p-t-10 m-lr--7">
            <a
              href="#"
              className="flex-c-m how-pagination1 trans-04 m-all-7 active-pagination1"
            >
              1
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              2
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              3
            </a>
          </div>
        </div>
      </div>
    </>
  );
};

export default Shop;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const gender = query?.gender;
  const q = query?.q;

  const res = await fetch(
    `http://localhost:5001/products?${gender ? `&gender_like=${gender}` : ""}${
      q ? `&q=${q}` : ""
    }`
  );
  
  const data: IProduct[] = await res.json();

  return {
    props: {
      data,
    },
  };
};
