import type { GetServerSideProps, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import React, { useState } from "react";
import BlogItem from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import { IBlogs } from "../../interfaces/types";
import { useRouter } from "next/router";
import Search from "../search";

interface Props {
  data: IBlogs[];
}

const Blog: NextPage<Props> = ({ data }) => {
  const { push, query } = useRouter();
  const [search, setSearch] = useState("");

  const submitFunct = (e: React.FormEvent) => {
    e.preventDefault();
    push({
      pathname: "/blog",
      query: {
        ...query,
        q: search,
      },
    });
    setSearch("");
  };

  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageTitle title="Blog" />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {/* blog item */}

                {data.length > 0 ? (
                  data.map((el) => (
                    <BlogItem
                      key={el.id}
                      id={el.id}
                      excerpt={el.excerpt}
                      img={el.img}
                      title={el.title}
                      author={el.author}
                      category={el.category}
                    />
                  ))
                ) : (
                  <p>There are no results with your search.</p>
                )}

                {/* <p>There are no results with your search.</p> */}
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <form
                  className="bor17 of-hidden pos-relative"
                  onSubmit={submitFunct}
                >
                  <input
                    className="stext-103 cl2 plh4 size-116 p-l-28 p-r-55"
                    type="text"
                    name="search"
                    onChange={(e) => {
                      setSearch(e.target.value);
                    }}
                    value={search}
                    placeholder="Search"
                  />

                  <button className="flex-c-m size-122 ab-t-r fs-18 cl4 hov-cl1 trans-04">
                    <i className="zmdi zmdi-search"></i>
                  </button>
                </form>

                <div className="p-t-55">
                  <h4 className="mtext-112 cl2 p-b-33">Categories</h4>

                  <ul>
                    <li
                      className="bor18"
                      onClick={() => {
                        push("/blog?category=fashion");
                      }}
                    >
                      <button className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4">
                        Fashion
                      </button>
                    </li>

                    <li
                      className="bor18"
                      onClick={() => {
                        push("/blog?category=beauty");
                      }}
                    >
                      <button className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4">
                        Beauty
                      </button>
                    </li>

                    <li
                      className="bor18"
                      onClick={() => {
                        push("/blog?category=streetstyle");
                      }}
                    >
                      <button className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4">
                        Street Style
                      </button>
                    </li>

                    <li
                      className="bor18"
                      onClick={() => {
                        push("/blog?category=lifestyle");
                      }}
                    >
                      <button className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4">
                        Life Style
                      </button>
                    </li>

                    <li
                      className="bor18"
                      onClick={() => {
                        push(`/blog?category=diy`);
                      }}
                    >
                      <button className="dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4">
                        DIY & Crafts
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default Blog;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  let category = query.category;
  let search = query.q;

  let res = await fetch(
    `http://localhost:5001/blogs?${
      category ? `&category_like=${category}` : ""
    }${search ? `&q=${search}` : ""}`
  );

  const data: IBlogs[] = await res.json();

  return {
    props: {
      data,
    },
  };
};
